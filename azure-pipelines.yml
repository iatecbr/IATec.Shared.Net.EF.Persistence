# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
trigger:
  branches:
    include:
      - main

pool:
  name: IATec-Builds-Agents

variables:
  buildConfiguration: 'Release'

steps:
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        $version = [xml](Get-Content  src/IATec.Shared.EF.Persistence.csproj)
        $packageVersion = $version.Project.PropertyGroup.Version
        Write-Host "##vso[task.setvariable variable=packageVersion]$packageVersion"
    displayName: 'Get project version'
    
  - task: NuGetAuthenticate@0
    displayName: 'NuGet authenticate'
    
#  - task: RenameFiles@1
#    displayName: 'Rename NuGet.Config.Prod To NuGet.Config'
#    inputs:
#      SourceFolder: '$(Build.SourcesDirectory)'
#      Contents: 'NuGet.Config.Prod'
#      TargetFolder: '$(Build.SourcesDirectory)'
#      RenameTo: 'NuGet.Config'
#
#  - task: qetza.replacetokens.replacetokens-task.replacetokens@3
#    displayName: 'Replace variables in NuGet.Config'
#    inputs:
#      targetFiles: '**/NuGet.Config'
#      encoding: 'auto'
#      writeBOM: true
#      actionOnMissing: 'warn'
#      keepToken: false
#      tokenPrefix: '#{'
#      tokenSuffix: '}#'
    
  - script: dotnet build --configuration $(buildConfiguration)
    displayName: 'Dotnet build'

  - task: NuGetCommand@2
    inputs:
      displayName: 'Pack nuGet package'
      command: pack
      packagesToPack: '**/IATec.Shared.EF.Persistence.csproj'
      packDestination: '$(Build.ArtifactStagingDirectory)'
      versioningScheme: byEnvVar
      versionEnvVar: packageVersion

  - task: NuGetCommand@2
    displayName: 'NuGet push'
    inputs:
      command: push
      publishVstsFeed: 'IATec.Community'
      allowPackageConflicts: true